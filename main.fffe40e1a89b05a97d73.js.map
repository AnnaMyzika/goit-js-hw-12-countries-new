{"version":3,"sources":["webpack:///./index.js","webpack:///./js/fetchCountries.js"],"names":["refs","input","document","querySelector","countries","addEventListener","debounce","value","target","trim","searchQuery","fetch","then","resp","status","json","data","length","innerHTML","markup","reduce","acc","name","insertAdjacentHTML","capital","population","languages","flag","console","log","error","text","delay","catch"],"mappings":"8NAOMA,G,oBAAO,CACXC,MAAOC,SAASC,cAAc,UAC9BC,UAAWF,SAASC,cAAc,gBAIpCH,EAAKC,MAAMI,iBAAiB,QAASC,KAErC,YAA6C,IAAXC,EAAW,EAArBC,OAAUD,MAChC,GAAqB,KAAjBA,EAAME,OACR,QCjBmCC,EDmBtBH,EAAME,OClBdE,MAAM,yCAAyCD,GAAeE,MACnE,SAAAC,GACE,OAAoB,MAAhBA,EAAKC,OACA,QAEFD,EAAKE,WDcbH,MAAK,SAAAI,GACJ,GAAIA,EAAKC,QAAU,GAAKD,EAAKC,QAAU,GAAI,CACzCjB,EAAKI,UAAUc,UAAY,GAC3B,IAAMC,EAASH,EAAKI,QAClB,SAACC,EAAD,UAAmBA,EAAG,OAAtB,EAAQC,KAAiB,UACzB,IAEFtB,EAAKI,UAAUmB,mBAAmB,YAAaJ,GAGjD,GAAoB,IAAhBH,EAAKC,OAAc,CACrBjB,EAAKI,UAAUc,UAAY,GADN,MAE4BF,EAAK,GAA9CQ,EAFa,EAEbA,QAASC,EAFI,EAEJA,WAAYC,EAFR,EAEQA,UAAWC,EAFnB,EAEmBA,KAKlCR,EAAS,gCACEM,EADL,6BAEED,EAFF,qBAJIE,EAAUN,QACxB,SAACC,EAAD,UAAmBA,EAAG,OAAtB,EAAQC,KAAiB,UACzB,IAEU,4BAIAK,EAJA,kCAMZ3B,EAAKI,UAAUmB,mBAAmB,YAAaJ,GAC/CS,QAAQC,IAAIH,GAGVV,EAAKC,OAAS,KAChBjB,EAAKI,UAAUc,UAAY,GAC3BY,gBAAM,CACJC,KAAM,8DACNC,MAAO,UAIZC,OAAM,WACLjC,EAAKI,UAAUc,UAAY,GAC3BY,gBAAM,CACJC,KAAM,6BACNC,MAAO,SC3DA,IAAwBtB,IDaqB,Q","file":"main.fffe40e1a89b05a97d73.js","sourcesContent":["import './styles.css';\r\nimport debounce from 'lodash.debounce';\r\nimport fetchCountries from './js/fetchCountries';\r\nimport { error } from '@pnotify/core';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\n\r\nconst refs = {\r\n  input: document.querySelector('.input'),\r\n  countries: document.querySelector('.countries'),\r\n};\r\n// fetchCountries('usa').then(data => console.log(data));\r\n\r\nrefs.input.addEventListener('input', debounce(createMarkup, 500));\r\n\r\nfunction createMarkup({ target: { value } }) {\r\n  if (value.trim() === '') {\r\n    return;\r\n  }\r\n  fetchCountries(value.trim())\r\n    .then(data => {\r\n      if (data.length >= 2 && data.length <= 10) {\r\n        refs.countries.innerHTML = '';\r\n        const markup = data.reduce(\r\n          (acc, { name }) => acc + `<li>${name}</li>`,\r\n          '',\r\n        );\r\n        refs.countries.insertAdjacentHTML('beforeend', markup);\r\n      }\r\n\r\n      if (data.length === 1) {\r\n        refs.countries.innerHTML = '';\r\n        const { capital, population, languages, flag } = data[0];\r\n        const langStr = languages.reduce(\r\n          (acc, { name }) => acc + `<li>${name}</li>`,\r\n          '',\r\n        );\r\n        const markup = `<li>\r\n        <p>Population: ${population}</p>\r\n        <p>Capital: ${capital}</p>\r\n        <ul>${langStr}</ul>\r\n        <img src='${flag}' width='300px'>\r\n        </li>`;\r\n        refs.countries.insertAdjacentHTML('beforeend', markup);\r\n        console.log(languages);\r\n      }\r\n\r\n      if (data.length > 10) {\r\n        refs.countries.innerHTML = '';\r\n        error({\r\n          text: 'Too many matches found. Please enter a more specific query!',\r\n          delay: 3000,\r\n        });\r\n      }\r\n    })\r\n    .catch(() => {\r\n      refs.countries.innerHTML = '';\r\n      error({\r\n        text: 'Error more specific query!',\r\n        delay: 3000,\r\n      });\r\n    });\r\n}\r\n","export default function fetchCountries(searchQuery) {\r\n  return fetch(`https://restcountries.eu/rest/v2/name/${searchQuery}`).then(\r\n    resp => {\r\n      if (resp.status === 404) {\r\n        return 'error';\r\n      }\r\n      return resp.json();\r\n    },\r\n  );\r\n}\r\n"],"sourceRoot":""}